# Tox (http://tox.testrun.org/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
min_version = 4.0
envlist =
    py{39,310,311,312,313,314}, pypy3, docs, flake8,
    mypy-py{39,310,311,312,313,314,py3}, pytest, coverage,
    xmlschema{401}, w3c-xsdtests, w3c-qt3tests
skip_missing_interpreters = true
work_dir = {tox_root}/../.tox/elementpath

[testenv]
deps =
    lxml
    lxml-stubs
    xmlschema>=4.0.1
    docs: sphinx
    coverage: coverage
set_env =
    py313: TEST_UNICODE_INSTALLATION = 6.2.0
commands = python -m unittest

[testenv:docs]
commands =
    make -C doc html SPHINXOPTS="-W -n"
    make -C doc latexpdf SPHINXOPTS="-W -n"
    make -C doc doctest SPHINXOPTS="-W -n"
    sphinx-build -W -n -T -b man doc build/sphinx/man
allowlist_externals = make

[flake8]
max-line-length = 100

[testenv:flake8]
deps =
    flake8
commands =
    flake8 elementpath
    flake8 tests

[testenv:mypy-py{39,310,311,312,313,314,py3}]
deps =
    mypy==1.15.0
    xmlschema>=4.0.1
    lxml-stubs
commands =
    mypy --strict elementpath
    python tests/run_typing_tests.py

[testenv:coverage]
commands =
    coverage run -p -m unittest
    coverage combine
    coverage report -m

[testenv:pytest]
deps =
    pytest
    pytest-randomly
    lxml
    lxml-stubs
    xmlschema>=4.0.1
commands =
    pytest tests -ra

[testenv:xmlschema{401}]
description = Run xmlschema tests and mypy on xmlschema source (>=3.1.0)
platform = (linux|darwin)
set_env =
    xmlschema401: VERSION = 4.0.1
change_dir = {env_tmp_dir}
deps =
    mypy==1.15.0
    lxml
    lxml-stubs
    jinja2
    xmlschema=={env:VERSION}
commands =
    pip download xmlschema=={env:VERSION} --no-deps --no-binary xmlschema
    tar xzf xmlschema-{env:VERSION}.tar.gz --strip-components=1
    python tests/run_all_tests.py
allowlist_externals =
    bash
    sed
    tar
ignore_outcome = True

[testenv:w3c-xsdtests]
description = Run W3C XSD 1.0/1.1 tests using xmlschema==4.0.1
platform = (linux|darwin)
set_env =
    VERSION = 4.0.1
    COMMIT = 4293d6fb026af778aa7ad381c2a310354578cbe3
    CHECKSUM = 3c7a44dbb59553d09ba96fee898255be78966960c22e9a7886c0b426a03255d7
change_dir = {env_tmp_dir}
deps =
    lxml
    xmlschema=={env:VERSION}
commands =
    pip download xmlschema=={env:VERSION} --no-deps --no-binary xmlschema
    tar xzf xmlschema-{env:VERSION}.tar.gz
    curl -L -o w3c-xsdtests.tar.gz https://github.com/w3c/xsdtests/tarball/{env:COMMIT}
    bash -c "sha256sum w3c-xsdtests.tar.gz | grep {env:CHECKSUM}"
    mkdir xsdtests
    tar xzf w3c-xsdtests.tar.gz -C xsdtests --strip-components=1
    python xmlschema-{env:VERSION}/tests/run_w3c_tests.py --xml
allowlist_externals =
    bash
    curl
    grep
    tar
    mkdir
    sha256sum
ignore_outcome = True

[testenv:w3c-qt3tests]
description = Run W3C XQuery/XPath 2.0/3.0 tests
set_env =
    COMMIT = b6584bdb888687348a46d5d596d70e326008e236
    CHECKSUM = 7833656eaf81394b47e8dd7a4a6ee537e7f58fc7d7dc3f4795532d09f7432462
change_dir = {env_tmp_dir}
deps =
    lxml
    xmlschema>=4.0.1
commands =
    mkdir -p elementpath-tmp/tests
    cp -p {tox_root}/tests/run_w3c_tests.py elementpath-tmp/tests/
    curl -L -o w3c-qt3tests.tar.gz https://github.com/w3c/qt3tests/tarball/{env:COMMIT}
    bash -c "sha256sum w3c-qt3tests.tar.gz | grep {env:CHECKSUM}"
    mkdir qt3tests
    tar xzf w3c-qt3tests.tar.gz -C qt3tests --strip-components=1
    python elementpath-tmp/tests/run_w3c_tests.py ./qt3tests/catalog.xml
    python elementpath-tmp/tests/run_w3c_tests.py ./qt3tests/catalog.xml --xp30
allowlist_externals =
    bash
    curl
    cp
    grep
    tar
    mkdir
    sha256sum
ignore_outcome = True

[testenv:build]
deps =
    build
commands =
    python -m build
